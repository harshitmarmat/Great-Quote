{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuote.js","components/UI/Card.js","components/UI/LoadingSpinner.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","activeClassName","active","to","Layout","props","main","children","QuoteItem","item","text","author","id","QuoteList","history","useHistory","location","useLocation","queryParam","URLSearchParams","search","console","log","get","quotes","ascending","isAscending","sortedQuote","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","DummyData","AllQuote","Card","card","LoadingSpinner","spinner","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","message","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","type","ref","rows","actions","NewQuote","quoteData","NewCommentForm","commentTextRef","submitFormHandler","Comments","isAddingComment","setIsAddingComment","comments","HighlightedQuote","QuoteDetail","param","useParams","find","quoteItem","quoteId","path","exact","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7419b51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__Bh_vx\",\"logo\":\"MainNavigation_logo__Lrek4\",\"nav\":\"MainNavigation_nav__3xMd5\",\"active\":\"MainNavigation_active__4IAqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1mVF_\",\"loading\":\"QuoteForm_loading__1GTWm\",\"control\":\"QuoteForm_control__a6dm7\",\"actions\":\"QuoteForm_actions__2xv5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__gkKtQ\",\"loading\":\"NewCommentForm_loading__3Inhc\",\"control\":\"NewCommentForm_control__9CQgG\",\"actions\":\"NewCommentForm_actions__2DULk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1iJcF\",\"sorting\":\"QuoteList_sorting__2TE3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__axzls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2TM7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__17dPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1N9f7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1u4Uj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__7OK1K\"};","import { Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from './MainNavigation.module.css'\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <Fragment>\r\n            <header className={classes.header}>\r\n                <div className={classes.logo}>Great Quotes</div>\r\n                <nav className={classes.nav}>\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink activeClassName={classes.active} to='/quotes'>\r\n                                All Quotes\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName={classes.active} to='/new-quote'>\r\n                                Add Quote\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default MainNavigation;","import { Fragment } from \"react\"\r\nimport MainNavigation from \"./MainNavigation\"\r\nimport classes from \"./Layout.module.css\"\r\n\r\nconst Layout = (props) => {\r\n    return(\r\n        <Fragment>\r\n            <MainNavigation/>\r\n            <main className={classes.main}>\r\n                {props.children}\r\n            </main>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn' >\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParam = new URLSearchParams(location.search);\n  console.log(queryParam.get('sort'));\n\n  const isAscending = queryParam.get('sort')==='asc';\n\n  const sortedQuote = sortQuotes(props.quotes,isAscending);\n  const sortHandler = () => {\n    history.push('/quotes/?sort=' + (isAscending?'dsc':'asc'));\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortHandler}>Sort {isAscending?'Ascending' : 'Descending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuote.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from \"../components/quotes/QuoteList\";\r\n\r\nconst DummyData = [\r\n    {id:'q1', author : 'Harshit' , text : 'One should always be a learner!'},\r\n    {id:'q2', author : 'Marmat' , text : 'One day all hard-work will pay off!'}\r\n]\r\nconst AllQuote = () => {\r\n    return (\r\n        <QuoteList quotes={DummyData} />\r\n    )\r\n}\r\n\r\nexport default AllQuote;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering , setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = ()=> {\n    setIsEntering(true);\n  }\n\n  const finishEnteringHandler = () =>{\n    setIsEntering(false);\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location)=>'Are you sure you want to leave? All your data will lost!'}/>\n      <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\n\r\nconst NewQuote = () => {\r\n    const history = useHistory();\r\n    const newQuoteHandler = (quoteData) =>{\r\n        console.log(quoteData);\r\n\r\n        history.push('/quotes');\r\n    }\r\n\r\n    return (\r\n        <QuoteForm onAddQuote={newQuoteHandler}/>\r\n    )\r\n\r\n}\r\n\r\nexport default NewQuote;","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment } from \"react\";\r\nimport { Link, Route, useParams } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\"\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nconst QuoteDetail = () => {\r\n    const DummyData = [\r\n        {id:'q1', author : 'Harshit' , text : 'One should always be a learner!'},\r\n        {id:'q2', author : 'Marmat' , text : 'One day all hard-work will pay off!'}\r\n    ];\r\n\r\n    const param = useParams();\r\n    const quote = DummyData.find((quoteItem)=> quoteItem.id === param.quoteId);\r\n\r\n    if(!quote){\r\n        return (<p>No quote found!</p>)\r\n    }\r\n    console.log(quote);\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={quote.text} author = {quote.author} />\r\n            <Route path={`/quotes/${param.quoteId}`} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to={`/quotes/${param.quoteId}/comment`}>\r\n                        Load Comments\r\n                    </Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`/quotes/${param.quoteId}/comment`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default QuoteDetail;","const NotFound = () => {\r\n    return (\r\n        <div className=\"centered\">\r\n            <p>Page Not Found</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuote from \"./pages/AllQuote\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport NotFound from \"./pages/NotFound\"\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/quotes' />\n        </Route>\n        <Route path='/quotes'  exact>\n          <AllQuote/>\n        </Route>\n        <Route path='/quotes/:quoteId'>\n          <QuoteDetail/>\n        </Route>\n        <Route path='/new-quote'>\n          <NewQuote/>\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n"],"sourceRoot":""}